plugins {
    id 'java-library'
    id 'java-test-fixtures'
    id 'maven-publish'
    id 'com.jfrog.bintray' version '1.8.5'
    id 'com.palantir.git-version' version '0.12.3'
}

sourceSets {
    main {
        resources {
            exclude '**/node_modules/*'
        }
    }
}

task myJavadocs(type: Javadoc) {
    source = sourceSets.main.allJava
    classpath = project.sourceSets.main.compileClasspath
    options.links 'https://docs.oracle.com/en/java/javase/11/docs/api/'
}

dependencies {
    api 'org.slf4j:slf4j-api:1.7.30'
    api 'org.ow2.asm:asm:7.3.1'

    compileOnly 'com.fasterxml.jackson.core:jackson-databind:2.10.2'
    compileOnly 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.10.2'
    compileOnly 'com.google.code.gson:gson:2.8.6'
    compileOnly 'org.xerial:sqlite-jdbc:3.30.1'
    compileOnly 'com.h2database:h2:1.4.200'
    compileOnly 'org.postgresql:postgresql:42.2.11'
    compileOnly 'com.oracle.ojdbc:ojdbc8_g:19.3.0.0'
    compileOnly 'org.mariadb.jdbc:mariadb-java-client:2.6.0'
    compileOnly 'mysql:mysql-connector-java:8.0.19'
    compileOnly 'redis.clients:jedis:3.2.0'

    testImplementation 'org.ow2.asm:asm-util:7.3.1'
    testImplementation 'com.fasterxml.jackson.core:jackson-databind:2.10.2'
    testImplementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.10.2'
    testImplementation 'com.google.code.gson:gson:2.8.6'
    testImplementation 'org.testcontainers:testcontainers:1.13.0'
    testImplementation 'org.testcontainers:junit-jupiter:1.13.0'
    testImplementation 'org.testcontainers:postgresql:1.13.0'
    testImplementation 'org.testcontainers:oracle-xe:1.13.0'
    testImplementation 'org.testcontainers:mariadb:1.13.0'
    testImplementation 'org.xerial:sqlite-jdbc:3.30.1'
    testImplementation 'com.h2database:h2:1.4.200'
    testImplementation 'org.postgresql:postgresql:42.2.11'
    testImplementation 'com.oracle.ojdbc:ojdbc8_g:19.3.0.0'
    testImplementation 'org.mariadb.jdbc:mariadb-java-client:2.6.0'
    testImplementation 'mysql:mysql-connector-java:8.0.19'
    testImplementation 'redis.clients:jedis:3.2.0'

    testFixturesApi 'org.assertj:assertj-core:3.15.0'
    testFixturesApi 'org.junit.jupiter:junit-jupiter:5.6.1'
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = 'org.jobrunr'
            artifactId = 'jobrunr'
            version = project.version.replace("v", "")
            from components.java

            pom {
                name = 'JobRunr'
                description = 'An easy way to perform background processing on the JVM. Backed by persistent storage. Open and free for commercial use.'
                url = 'https://github.com/jobrunr/jobrunr'
                licenses {
                    license {
                        name = 'Multi licensed'
                        url = 'https://github.com/jobrunr/jobrunr/blob/master/License.md'
                    }
                }
                developers {
                    developer {
                        id = 'rdehuyss'
                        name = 'Ronald Dehuysser'
                        email = 'ronald.dehuysser@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/jobrunr/jobrunr.git'
                    developerConnection = 'scm:git@github.com:jobrunr/jobrunr.git'
                    url = 'https://github.com/jobrunr/jobrunr.git'
                }

                withXml {
                    Node pomNode = asNode()
                    pomNode.dependencies.'*'.findAll() {
                        it.optional.text() == 'true'
                    }.each() {
                        it.parent().remove(it)
                    }
                }
            }
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_APIKEY')
    publications = ['mavenJava']
    publish = true

    pkg {
        userOrg = 'jobrunr'
        repo = 'jobrunr'
        name = 'JobRunr'
        licenses = ['LGPL-3.0']
        websiteUrl = 'https://www.jobrunr.io'
        vcsUrl = 'https://github.com/jobrunr/jobrunr.git'
        issueTrackerUrl = 'https://github.com/jobrunr/jobrunr/issues'
        version {
            name = project.version.replace("v", "")
            released  = new Date()
            vcsTag = project.version
        }
    }
}